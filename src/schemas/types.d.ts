/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/cars": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve all cars
         * @description Returns a list of cars.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Response was successful. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["carResult"][];
                    };
                };
            };
        };
        put?: never;
        /**
         * Create a new car
         * @description Add a new car to the system.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: components["requestBodies"]["carCommand"];
            responses: {
                /** @description Car was created successfully. */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["carResult"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cars/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get car by ID
         * @description Retrieve a specific car by its ID.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Car retrieved successfully. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["carResult"];
                    };
                };
                404: components["responses"]["notFoundError"];
            };
        };
        /**
         * Update car by ID
         * @description Modify car details.
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: components["requestBodies"]["carCommand"];
            responses: {
                /** @description Car successfully updated. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["carResult"];
                    };
                };
                404: components["responses"]["notFoundError"];
            };
        };
        post?: never;
        /**
         * Delete car by ID
         * @description Remove a car from the system using its ID.
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Car successfully deleted. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                404: components["responses"]["notFoundError"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Command to add Car in right way. */
        carCommand: {
            brand: string;
            model: string;
            year: number;
        };
        /** @description Result of request */
        carResult: components["schemas"]["carCommand"] & {
            id: string;
            brand: string;
            model: string;
            year: number;
        };
    };
    responses: {
        /** @description Car not found */
        notFoundError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Car not found */
                    message?: string;
                };
            };
        };
    };
    parameters: never;
    requestBodies: {
        /** @description Request body for Car system */
        carCommand: {
            content: {
                "application/json": components["schemas"]["carCommand"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
